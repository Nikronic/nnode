(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     83699,       1721]
NotebookOptionsPosition[     81292,       1655]
NotebookOutlinePosition[     81669,       1672]
CellTagsIndexPosition[     81626,       1669]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", "z_", "]"}], ":=", 
  FractionBox["1", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]]}]]}]], "Input",
 CellChangeTimes->{{3.715704100314364*^9, 
  3.7157041157119217`*^9}},ExpressionUUID->"f821c7f8-494b-4bed-aaa9-\
4bb9e9157434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", "z", "]"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.7162021917818604`*^9, 3.716202214357045*^9}, 
   3.7162023271929817`*^9},ExpressionUUID->"e862d899-4412-4275-bc80-\
85025caf0b0e"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "z"}]], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.716202328133029*^9, 3.718460492152895*^9, 
  3.726160346077392*^9},ExpressionUUID->"545b4382-8321-46e6-9bd0-\
a4ff79013afe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d\[Sigma]dz", "[", "z_", "]"}], ":=", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "2"]]}]], "Input",
 CellChangeTimes->{{3.7162021917818604`*^9, 3.716202214357045*^9}, 
   3.716202334755018*^9},ExpressionUUID->"ab8d7aff-c213-4dac-b18e-\
2462c58a781a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "2"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"63c3f0a3-c36f-44e9-a9fb-69bdddc21dd4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "3"]], "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.7162023500348186`*^9, 3.71846050554532*^9, 
  3.726160348057591*^9},ExpressionUUID->"9b90e2a1-e9c9-42c3-b546-\
3ffca67dbdc4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2\[Sigma]dz2", "[", "z_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "3"]], "-", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "2"]]}]}]], "Input",
 CellChangeTimes->{{3.715704855570468*^9, 3.715704861393168*^9}, {
   3.716202220045101*^9, 3.7162022301341963`*^9}, 
   3.7162023558816233`*^9},ExpressionUUID->"def33e1d-0fb1-47f9-9a7e-\
cbc1e743d669"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "3"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"3991a231-9eaa-48fe-ba60-b3f5c50a2e54"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "4"]], "-", 
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "3"]], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.716202384552827*^9, 3.718460512514779*^9, 
  3.726160349745137*^9},ExpressionUUID->"42a37c9b-5fa5-4a59-8117-\
fac0508824f1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d3\[Sigma]dz3", "[", "z_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "4"]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "3"]], "+", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "2"]]}]}]], "Input",
 CellChangeTimes->{{3.715704855570468*^9, 3.715704861393168*^9}, {
   3.716202220045101*^9, 3.7162022417913847`*^9}, 
   3.7162023915128603`*^9},ExpressionUUID->"91a3c062-c5da-4f14-aa45-\
9e80a7f3330c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.726160363708063*^9},ExpressionUUID->"137635a8-146f-4121-b262-\
6e763c6e121e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"24", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "4"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "5"]], "-", 
  FractionBox[
   RowBox[{"36", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "4"]], "+", 
  FractionBox[
   RowBox[{"14", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "3"]], "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{
  3.726160364290292*^9},ExpressionUUID->"483630ed-ae15-4ddc-a5f5-\
697e160c9be2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d4\[Sigma]dz4", "[", "z_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"24", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "4"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "5"]], "-", 
   FractionBox[
    RowBox[{"36", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "4"]], "+", 
   FractionBox[
    RowBox[{"14", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "3"]], "-", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "2"]]}]}]], "Input",
 CellChangeTimes->{{3.715704855570468*^9, 3.715704861393168*^9}, {
   3.716202220045101*^9, 3.7162022417913847`*^9}, 3.7162023915128603`*^9, {
   3.726160375622919*^9, 
   3.726160392919348*^9}},ExpressionUUID->"8787dd1c-f628-496e-bfb6-\
e9438ab70b9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]", "[", "z", "]"}], ",", 
     RowBox[{"d\[Sigma]dz", "[", "z", "]"}], ",", 
     RowBox[{"d2\[Sigma]dz2", "[", "z", "]"}], ",", 
     RowBox[{"d3\[Sigma]dz3", "[", "z", "]"}], ",", 
     RowBox[{"d4\[Sigma]dz4", "[", "z", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<z\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(d\), \
\(k\)]\)\[Sigma](z)/\!\(\*SuperscriptBox[\(dz\), \(k\)]\)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<The sigmoid transfer function \[Sigma](z) and its first four \
derivatives\>\""}], ",", 
   RowBox[{"Frame", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7162022650847692`*^9, 3.7162022992138243`*^9}, {
  3.716202362804006*^9, 3.716202411728331*^9}, {3.716203285484805*^9, 
  3.716203289164419*^9}, {3.718460633303244*^9, 3.718460722783835*^9}, {
  3.7184617249675694`*^9, 3.718461781242424*^9}, {3.718461812463318*^9, 
  3.718461837096304*^9}, {3.71846186964568*^9, 3.7184618714114847`*^9}, {
  3.718461918552198*^9, 3.7184619209146767`*^9}, {3.718461957501399*^9, 
  3.7184619597237663`*^9}, {3.7261604012545233`*^9, 
  3.726160412684531*^9}},ExpressionUUID->"daafd1df-c9d6-4a87-a849-\
191c538d6855"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
17dS8D9euRtm
          "]]}, Annotation[#, "Charting`Private`Tag$6651#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ZkiH/93/IdL/u//7P+bY7xM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6651#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Gv7zFCoj63djHtMX//8+iqr5f/dR+D/pD+E6
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6651#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
lpC9WlLl+msJ4Lx09FJtxBKK+ZW8a0QwAbxROr3j8hKSWNosYeb3AqJ0bvpM
LC2irb6VoSuH4qHiLKcpv+IimvTV1PnvRix8rbSlxu9dRPa5AfVxmrFQcxhl
Cu1YRML90pK+9Fho3OGyQZS2iOZvbpq59i4GenvbimXrF9DjWbaipqlnMH+F
IanluIAKYifGqy2jQcpDZe06cx5NUjWq59c9AaLbUGoweh75lS8cFaqOhDNH
rU+ffTCP5n++Sf8VGgl3N4e8guvzqP5nvbgPdyR0MLvPblWeRzGb0vz9t0fA
/Qa/7JzqObS1cTWKticMhqW+WM5MzSJh53W3dwUGQVL3qbLbGv8QJVpC5Pwm
E1AYUlhsViQ51q3lu9dxKBvjkpOTIHmwO3JbMwbDc3XPhzeTPFn67H0OD5Li
NnA99X0G+d0QHggbM0W52lp79t0i+XKW6os711FZlqJf3+tptFXxQTy24S4a
8d+mpsM3heSEnmWsl4pCRU8ljo2e+Y0stsRZ3buWiuR+dszsfzGM3u2SepR4
Pxe5Te6T3B44jD7mN/OEJOWigjn/i6sOw0iYc6uSU1Eu0mCXqqhRHkZyrxI9
doznIhMRz2dXm3+gnfiHEHajt+jmRQEVxsYfSNwCqSxxv0NFDWa+vJ6DaJVH
YedaRB5abc98u2IxiIaa6qO90/OQZh9tdEiH/Dw22uoXkYeqJzKM324bRMtL
YqLxf/LQ941Lu41zBlB8smutlkE+Wjv2vOzBaD9S/KbaGEx7j7SKujasnOlD
zFu9Sc6WBSgzAz/8RbUPRSrb7fb3KEB8z52uRgj3ITWHrk23wwtQ6xx7pH5z
LxKWWFAS+lSAxLzObH2x2IPaQ8/xHNpeiEr8/3FiOt3Ibu9o+38VhWg57AB7
cF8HMpuYcTPe8gHVO32xFcjoQJm/Vnw693xADOML5ZmuHcivLe+FltIHdJw7
ILCNvQPNyNWoF5h/QLFPG2mS+9rRnv3P+LanfUBK8TfWqm+3IuH6wOxA5Y/I
OT1rnovehDyc2Yc+HPmE5DZfD9Dsa0QK0iYtgwaf0F8Xmc2ubxpRihVrwJjZ
J+Sili7SrNOIxL8IBT5x/4Ru1iUbRns3oMyAAg3j15/Q9Ji03sGaOhTiO9B0
hqsYub1LuxRtV4cq86IvmQkWo9k7Ym5zlDpkwDbxSEWyGM1v3fWy8GAtOr52
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
K9Re+A==
          "]]}, Annotation[#, "Charting`Private`Tag$6651#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wNQP/xz
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6651#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"z\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(d\\), \
\\(k\\)]\\)\[Sigma](z)/\\!\\(\\*SuperscriptBox[\\(dz\\), \\(k\\)]\\)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"The sigmoid transfer function \[Sigma](z) and its first four \
derivatives\"", TraditionalForm], 
     PlotRange -> {{-5, 5}, {-0.12768361467730882`, 0.9933071477189689}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"\[Sigma]", "(", "z", ")"}], 
       RowBox[{"d\[Sigma]dz", "(", "z", ")"}], 
       RowBox[{"d2\[Sigma]dz2", "(", "z", ")"}], 
       RowBox[{"d3\[Sigma]dz3", "(", "z", ")"}], 
       RowBox[{"d4\[Sigma]dz4", "(", "z", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.716202286765627*^9, 3.716202299881666*^9}, 
   3.7162023398592453`*^9, {3.716202373761224*^9, 3.71620241326707*^9}, 
   3.716203289796444*^9, 3.7184605179183617`*^9, 3.7184606428954573`*^9, {
   3.718460680618952*^9, 3.718460723366881*^9}, {3.7184617442515917`*^9, 
   3.7184617822492247`*^9}, 3.7184618378495703`*^9, 3.7184618724076557`*^9, 
   3.7184619215009947`*^9, 
   3.7261604169764347`*^9},ExpressionUUID->"f6980af9-df10-41c1-9724-\
f386fa32400e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"0", ",", "1", ",", 
    RowBox[{"1", "/", "9"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.726160468070705*^9, 
  3.72616048184161*^9}},ExpressionUUID->"b0039116-2728-4048-802b-\
306f70d9be07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["2", "9"], ",", 
   FractionBox["1", "3"], ",", 
   FractionBox["4", "9"], ",", 
   FractionBox["5", "9"], ",", 
   FractionBox["2", "3"], ",", 
   FractionBox["7", "9"], ",", 
   FractionBox["8", "9"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7261604826906548`*^9},ExpressionUUID->"63ec3e3e-b7b6-4c1f-9ebc-\
055075f9aeed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", "x", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.726160487745316*^9, 
  3.726160493713293*^9}},ExpressionUUID->"149f1728-62ff-46b7-a2af-\
8829349e717b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5`", ",", "0.5277492350545132`", ",", "0.555328055262369`", ",", 
   "0.5825702064623147`", ",", "0.6093175418435606`", ",", 
   "0.6354235592583607`", ",", "0.6607563687658172`", ",", 
   "0.6852009766653157`", ",", "0.7086608250294356`", ",", 
   "0.7310585786300049`"}], "}"}]], "Output",
 CellChangeTimes->{{3.726160490460054*^9, 
  3.726160494289815*^9}},ExpressionUUID->"4889e048-b206-4727-bfbe-\
977bbc841a2d"]
}, Open  ]]
},
WindowSize->{1203, 756},
WindowMargins->{{-3763, Automatic}, {Automatic, 0}},
Magnification->2.,
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 320, 9, 93, "Input", "ExpressionUUID" -> \
"f821c7f8-494b-4bed-aaa9-4bb9e9157434"],
Cell[CellGroupData[{
Cell[903, 33, 266, 6, 63, "Input", "ExpressionUUID" -> \
"e862d899-4412-4275-bc80-85025caf0b0e"],
Cell[1172, 41, 387, 11, 117, "Output", "ExpressionUUID" -> \
"545b4382-8321-46e6-9bd0-a4ff79013afe"]
}, Open  ]],
Cell[1574, 55, 461, 13, 103, "Input", "ExpressionUUID" -> \
"ab8d7aff-c213-4dac-b18e-2462c58a781a"],
Cell[CellGroupData[{
Cell[2060, 72, 219, 6, 63, "Input", "ExpressionUUID" -> \
"63c3f0a3-c36f-44e9-a9fb-69bdddc21dd4"],
Cell[2282, 80, 692, 22, 120, "Output", "ExpressionUUID" -> \
"9b90e2a1-e9c9-42c3-b546-3ffca67dbdc4"]
}, Open  ]],
Cell[2989, 105, 830, 25, 106, "Input", "ExpressionUUID" -> \
"def33e1d-0fb1-47f9-9a7e-cbc1e743d669"],
Cell[CellGroupData[{
Cell[3844, 134, 219, 6, 63, "Input", "ExpressionUUID" -> \
"3991a231-9eaa-48fe-ba60-b3f5c50a2e54"],
Cell[4066, 142, 975, 32, 120, "Output", "ExpressionUUID" -> \
"42a37c9b-5fa5-4a59-8117-fac0508824f1"]
}, Open  ]],
Cell[5056, 177, 1124, 35, 106, "Input", "ExpressionUUID" -> \
"91a3c062-c5da-4f14-aa45-9e80a7f3330c"],
Cell[CellGroupData[{
Cell[6205, 216, 264, 8, 63, "Input", "ExpressionUUID" -> \
"137635a8-146f-4121-b262-6e763c6e121e"],
Cell[6472, 226, 1218, 42, 120, "Output", "ExpressionUUID" -> \
"483630ed-ae15-4ddc-a5f5-697e160c9be2"]
}, Open  ]],
Cell[7705, 271, 1471, 46, 106, "Input", "ExpressionUUID" -> \
"8787dd1c-f628-496e-bfb6-e9438ab70b9e"],
Cell[CellGroupData[{
Cell[9201, 321, 1535, 35, 285, "Input", "ExpressionUUID" -> \
"daafd1df-c9d6-4a87-a849-191c538d6855"],
Cell[10739, 358, 69086, 1245, 561, "Output", "ExpressionUUID" -> \
"f6980af9-df10-41c1-9724-f386fa32400e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79862, 1608, 265, 7, 63, "Input", "ExpressionUUID" -> \
"b0039116-2728-4048-802b-306f70d9be07"],
Cell[80130, 1617, 433, 13, 107, "Output", "ExpressionUUID" -> \
"63ec3e3e-b7b6-4c1f-9ebc-055075f9aeed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80600, 1635, 211, 5, 63, "Input", "ExpressionUUID" -> \
"149f1728-62ff-46b7-a2af-8829349e717b"],
Cell[80814, 1642, 462, 10, 127, "Output", "ExpressionUUID" -> \
"4889e048-b206-4727-bfbe-977bbc841a2d"]
}, Open  ]]
}
]
*)

